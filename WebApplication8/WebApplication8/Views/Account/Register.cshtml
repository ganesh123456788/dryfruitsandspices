@model WebApplication8.Models.User

@{
    ViewBag.Title = "adminpage";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>D Dry Fruits - Register</title>
    <link rel="stylesheet" href="~/Content/Site.css">
    <style>
        .container {
            display: flex;
            justify-content: center;
            height: 80vh;
            align-items: center;
        }

        .login-container {
           
            padding: 50px;
            width: 400px;
        }

            .login-container h2 {
                text-align: center;
                margin-bottom: 20px;
            }

        .form-horizontal {
            display: flex;
            flex-direction: column;
        }

        .form-group {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
            align-items: center;
        }

            .form-group label {
                width: 30%;
                margin-bottom: 0;
            }

            .form-group div {
                width: 70%;
            }

            .form-group input[type="text"],
            .form-group input[type="password"],
            .form-group select {
                width: 100%;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 4px;
            }

        .login-container button[type="submit"] {
            background-color: #4caf50;
            color: white;
            cursor: pointer;
        }

            .login-container button[type="submit"]:hover {
                background-color: #45a049;
            }

        .error {
            color: red;
            margin-top: 10px;
            text-align: center;
        }

        body {
            background-image: url('/Content/pexels-photo-1939485.jpeg');
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-size: cover;
        }

        .button-group {
            display: flex;
            justify-content: center;
            gap: 10px;
        }
    </style>
</head>
<body>
    <center>
        <img src="/Content/ganeshdevops.jpeg-removebg-preview.png" alt="Logo" height="150px" width="400px" />
    </center>
    <div class="container">
        <div class="login-container">
            <h2>Register</h2>
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { id = "registerForm" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Role)
                        <div>
                            @Html.DropDownListFor(m => m.Role, new SelectList(new List<string> { "User", "Admin" }), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Role)
                        </div>
                    </div>

                    <div class="form-group button-group">
                        <input type="submit" value="Register" class="btn btn-default" />
                        <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Login", "Login")'">Login</button>
                    </div>
                </div>
            }

            <p id="errorText" class="error"></p>
        </div>
    </div>
    <script src="~/Scripts/valid.js"></script>
</body>
</html>
