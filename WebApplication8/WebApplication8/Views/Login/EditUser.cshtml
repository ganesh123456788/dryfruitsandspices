@model WebApplication8.Models.EditUserViewModel

@{
<<<<<<< HEAD
    ViewBag.Title = "Edit User";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>D Dry Fruits - Register</title>
    <link rel="stylesheet" href="~/Content/Site.css">
    <style>
        .container {
            display: flex;
            justify-content: center;
            height: 80vh;
            align-items: center;
        }

        .login-container {
            padding: 50px;
            width: 400px;
        }

            .login-container h2 {
                text-align: center;
                margin-bottom: 20px;
            }

        .form-horizontal {
            display: flex;
            flex-direction: column;
        }

        .form-group {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
            align-items: center;
        }

            .form-group label {
                width: 30%;
                margin-bottom: 0;
            }

            .form-group div {
                width: 70%;
            }

            .form-group input[type="text"],
            .form-group input[type="password"],
            .form-group select {
                width: 100%;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 4px;
            }

        .btn {
            display: inline-block;
            padding: 10px 20px;
            font-size: 16px;
            font-weight: bold;
            text-align: center;
            text-decoration: none;
            border-radius: 4px;
            border: none;
            cursor: pointer;
            color: white;
            margin: 10px;
        }

        .btn-primary {
            background-color: #4caf50;
        }

            .btn-primary:hover {
                background-color: #45a049;
            }

        .btn-secondary {
            background-color: #007bff;
        }

            .btn-secondary:hover {
                background-color: #0056b3;
            }

        .error {
            color: red;
            margin-top: 10px;
            text-align: center;
        }

        body {
            background-image: url('/Content/pexels-photo-1939485.jpeg');
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-size: cover;
        }

        .button-group {
            display: flex;
            justify-content: center;
            gap: 10px;
        }
    </style>

</head>
<body>
    <center>
        <a href="@Url.Action("ddryfruitsandspices", "Home")">
            <img src="/Content/ganeshdevops.jpeg-removebg-preview.png" alt="Logo" height="150px" width="400px" />

        </a>
    </center>
    <div class="container">
        <div class="login-container">
            <h2>@Model.FirstName @Model.LastName</h2>

            @using (Html.BeginForm("EditUser", "Login", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                    @Html.EditorFor(m => m.Email, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.OldPassword, new { @class = "control-label" })
                    <input type="text" class="form-control" value="********" readonly />
                    @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.NewPassword, new { @class = "control-label" })
                    @Html.EditorFor(m => m.NewPassword, new { @class = "form-control", type = "password" })
                    @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Role, new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.Role, new SelectList(new[] { "Admin", "User" }), "Select Role", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Role, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label class="control-label">Gender</label>
                    <div class="radio-group">
                        <label>
                            @Html.RadioButtonFor(m => m.Gender, "Male") Male
                        </label>
                        <label>
                            @Html.RadioButtonFor(m => m.Gender, "Female") Female
                        </label>
                        <label>
                            @Html.RadioButtonFor(m => m.Gender, "Other") Other
                        </label>
                    </div>
                    @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a href="@Url.Action("ddryfruitsandspices", "Home")" class="btn btn-default">Cancel</a>
                </div>
            }
        </div>
    </div>
    <script src="~/Scripts/valid.js"></script>
</body>
</html>
=======
    ViewBag.Title = "profile";
    Layout = null;

}
<!DOCTYPE html>
<html lang="en">
<head>
    <title>D Dry Fruits </title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
          integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<header>
    <div class="profile-icon">
        <i class="fas fa-user-circle"></i>
        <div class="profile-dropdown">
<<<<<<< HEAD
            <a href="@Url.Action("EditUser", "Login")"> <button onclick="myFunction()">PROFILE</button></a>
            <a> <button onclick="myFunction()">HOME</button></a>
            <a href="@Url.Action("UserDetails", "Login")"> <button onclick="myFunction()">SETTINGS</button></a>
            <a href="@Url.Action("Login", "Login")"><button onclick="myFunction()">SIGN OUT</button></a>
=======
            <a href="profile"> <button onclick="myFunction()">PROFILE</button></a>
            <a href="ddryfruitsandspices"> <button onclick="myFunction()">HOME</button></a>
            <a href="settings"> <button onclick="myFunction()">SETTINGS</button></a>
            <a href="adminpage"><button onclick="myFunction()">SIGN OUT</button></a
>>>>>>> 7e3f928faabd10c9f152b7c1de955ce83682f9a1
        </div>
    </div>
</header>
<style>
    body {
        background-image: url('/Content/pexels-photo-1939485.jpeg');
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-size: 100%;
    }

    p {
        border-width: 1px;
        border-style: solid;
        border-top: 0;
        width: 20%;
        font-family: "Montserrat", sans-serif;
        font-size: 20px;
        padding: 7px 0;
        color: #070707;
    }

    .btn {
        float: right;
        font-family: "Roboto", sans-serif;
        text-transform: uppercase;
        font-size: 15px;
        border: none;
        color: #3fb6a8;
    }

    .profile-dropdown button {
        width: 110%;
        padding: 4px 0;
        margin-bottom: 5px;
        font-weight: bold;
        font-size: 18px;
        text-align: center;
    }

    .profile-dropdown {
        display: none;
        position: absolute;
        text-align: center;
        background-color: white;
        font-size: 100%;
        padding: 10px 20px;
        width: 60%;
        size: 100%;
        border: 1px solid #070202;
    }

    .profile-settings {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
    }

    .profile-icon {
        float: right;
        position: absolute;
        right: 10px;
        margin-left: 30px;
        height: 150px;
        width: 150px;
        font-size: 30px;
        top: 70px;
    }5

        .profile-icon:hover .profile-dropdown {
            display: block;
        }
</style>
<CENTER>
    <a>
        <a href="@Url.Action("ddryfruitsandspices", "Home")">
            <img src="/Content/ganeshdevops.jpeg-removebg-preview.png" height="150px" width="400px">
        </a>
        <div class="user-email">
            <h4> @Model.Email</h4>
        </div>
</CENTER>
<center>
    <div class="rightbox">
        <div class="profile">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Role, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Role, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Role, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.DateOfBirth, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                            @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Gender, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Gender, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</center>
>>>>>>> 901688282898ff11154d4a648ba17e842570c831
