@model List<ShoppingCartApp.Controllers.ShoppingCartController.CartItem>

@{
    Layout = null;
    decimal shippingCharge = 50;
    decimal gstRate = 0.18m;
    decimal subtotal = Model.Sum(i => i.Price * i.Quantity);
    decimal gstAmount = subtotal * gstRate;
    decimal total = subtotal + gstAmount + shippingCharge;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>D Dry Fruits</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
          integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        /* Your CSS styles */
        body {
            font-family: Arial, sans-serif;
            background-image: url('/Content/pexels-photo-1939485.jpeg');
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-size: cover;
            margin: 0;
            padding: 0;
        }

        .wrapper {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            width: 80%;
            margin: 20px auto;
            gap: 20px;
        }

        .container {
<<<<<<< HEAD

            padding: 20px;
=======
<<<<<<< HEAD

            padding: 20px;
=======
<<<<<<< HEAD

            padding: 20px;
=======
            background-color: white;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
>>>>>>> 901688282898ff11154d4a648ba17e842570c831
>>>>>>> 269e04670fc86126a2f86c6e82c9c95d19c9c894
>>>>>>> 021045f318c5c29aec4347f6ce09adbc8b00f79b
        }

        .cart-container {
            width: 70%;
        }

        .cart-summary-container {
            width: 25%;
        }

        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

            .cart-item img {
                width: 100px;
                height: 100px;
            }

        .cart-item-details {
            flex-grow: 1;
            padding-left: 20px;
        }

            .cart-item-details h3 {
                margin: 0;
                font-size: 1.2em;
            }

            .cart-item-details .price {
                font-size: 1.2em;
                font-weight: bold;
                margin-top: 10px;
            }

        .cart-item-options {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
        }

            .cart-item-options .qty-input {
                width: 50px;
                padding: 5px;
                text-align: center;
            }

        .cart-summary {
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
            border: 1px solid #ccc;
>>>>>>> 901688282898ff11154d4a648ba17e842570c831
>>>>>>> 269e04670fc86126a2f86c6e82c9c95d19c9c894
>>>>>>> 021045f318c5c29aec4347f6ce09adbc8b00f79b
            padding: 20px;
        }

            .cart-summary h4 {
                margin: 0;
                margin-bottom: 20px;
                font-size: 1.2em;
            }

            .cart-summary select,
            .cart-summary input[type="text"] {
                width: 100%;
                padding: 5px;
                margin-bottom: 10px;
            }

            .cart-summary .total {
                font-weight: bold;
                font-size: 1.2em;
                margin-top: 20px;
            }

            .cart-summary button {
                width: 100%;
                padding: 10px;
                background-color: #0073e6;
                color: white;
                border: none;
                cursor: pointer;
                margin-top: 20px;
            }

        .saved-for-later {
            margin-top: 30px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        table, th, td {
            border: 1px solid #ddd;
        }

        th, td {
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #f4f4f4;
        }

        .profile-dropdown {
            display: none;
            position: absolute;
            background-color: white;
            padding: 10px 20px;
            width: 60%;
            border: 1px solid #070202;
            top: 100px;
            right: 10px;
        }

        .fa-plus {
            right: 250px;
        }

        .profile-icon {
            right: 10px;
            margin-left: 30px;
        }

        .grid-container {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 3%;
            justify-items: center;
            align-items: center;
            max-width: 100%;
            padding: 20px;
        }

        .grid-item {
            text-align: center;
        }

        .fa-cart-shopping,
        .fa-plus,
        .profile-icon {
            float: right;
            position: absolute;
            height: 150px;
            width: 150px;
            font-size: 30px;
            top: 70px;
        }

        .fa-cart-shopping {
            right: 100px;
        }

        .profile-dropdown button {
            width: 100%;
            padding: 10px 0;
            margin-bottom: 5px;
            font-weight: bold;
            font-size: 18px;
            text-align: center;
        }

        .profile-icon:hover .profile-dropdown {
            display: block;
        }

        .badge {
            background-color: red;
            color: white;
            border-radius: 50%;
            padding: 5px 10px;
            position: absolute;
            top: 10px;
            right: 10px;
        }
        body {
            font-family: Arial, sans-serif;
        }

        .wrapper {
            padding: 20px;
        }

        .cart-container {
            width: 60%;
            margin: auto;
        }

        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
            border-bottom: 1px solid #ccc;
>>>>>>> 901688282898ff11154d4a648ba17e842570c831
>>>>>>> 269e04670fc86126a2f86c6e82c9c95d19c9c894
>>>>>>> 021045f318c5c29aec4347f6ce09adbc8b00f79b
        }

            .cart-item img {
                max-width: 100px;
                max-height: 100px;
            }

        .cart-item-details {
            flex-grow: 1;
            margin-left: 20px;
        }

        .cart-item-options {
            text-align: right;
        }

        .cart-summary-container {
            width: 60%;
            margin: 20px auto;
        }

        .cart-summary {
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
            border: 1px solid #ccc;
>>>>>>> 901688282898ff11154d4a648ba17e842570c831
>>>>>>> 269e04670fc86126a2f86c6e82c9c95d19c9c894
>>>>>>> 021045f318c5c29aec4347f6ce09adbc8b00f79b
            padding: 20px;
        }
        .wrapper {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            width: 80%;
            margin: 20px auto;
            gap: 20px;
        }

        .cart-container {
            flex: 3; /* Take more space */
        }

        .cart-summary-container {
            flex: 1; /* Take less space */
            max-width: 300px; /* Optional: Set a maximum width for the summary container */
        }

            .cart-summary p {
                margin: 10px 0;
            }

            .cart-summary .total {
                font-weight: bold;
                font-size: 1.2em;
            }

        .item-quantity input {
            width: 50px;
            text-align: center;
        }

        .remove-btn {
            background-color: #e74c3c;
            color: white;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
        }

            .remove-btn:hover {
                background-color: #c0392b;
            }

        .container {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <header>
        <div class="profile-icon">
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 021045f318c5c29aec4347f6ce09adbc8b00f79b
            <i  class="fas fa-user-circle"></i>
            <div class="profile-dropdown">
                <a href="@Url.Action("EditUser", "Login")"><button>PROFILE</button></a>
                <a href="@Url.Action("Index", "Combined")"><button>HOME</button></a>
                <a href="@Url.Action("EditUser", "Login")"><button>SETTINGS</button></a>
<<<<<<< HEAD
                <a href="@Url.Action("Login", "Login")"><button>LOG OUT</button></a>
=======
=======
<<<<<<< HEAD
            <i  class="fas fa-user-circle"></i>
=======
            <i class="fas fa-user
                           <i class="fas fa-user-circle"></i>
>>>>>>> 901688282898ff11154d4a648ba17e842570c831
            <div class="profile-dropdown">
                <a href="@Url.Action("EditUser", "Login")"><button>PROFILE</button></a>
                <a href="@Url.Action("Index", "Combined")"><button>HOME</button></a>
                <a href="@Url.Action("UserDetails", "Login")"><button>SETTINGS</button></a>
>>>>>>> 269e04670fc86126a2f86c6e82c9c95d19c9c894
                <a href="@Url.Action("Login", "Login")"><button>SIGN OUT</button></a>
>>>>>>> 021045f318c5c29aec4347f6ce09adbc8b00f79b
            </div>
        </div>
    </header>

    <center>
        <a href="@Url.Action("Index", "Combined")">
            <img src="/Content/ganeshdevops.jpeg-removebg-preview.png" height="150px" width="400px">
        </a>
    </center>

    <div class="wrapper">
        <div class="container cart-container">
            <h1>My Cart</h1>
            @if (Model.Any())
            {
                foreach (var item in Model)
                {
                    <div class="cart-item" data-item-id="@item.Price" data-item-price="@item.Price">
                        <img src="@Url.Content(item.ImagePath)" alt="@item.ProductName">
                        <div class="cart-item-details">
                            <h3>@item.ProductName</h3>
                            <p class="price">₹<span class="item-price">@item.Price</span></p>
                        </div>
                        <div class="cart-item-options">
                            <p>Total: ₹<span class="item-total">@((item.Price * item.Quantity).ToString("N2"))</span></p>
                            <form action="@Url.Action("RemoveFromCart", "ShoppingCart")" method="post">
                                <input type="hidden" name="productId" value="@item.Price" />
                                <div class="item-quantity">
                                    <label for="qty@item.Price">Qty:</label>
                                    <input type="number" id="qty@item.Price" name="quantity" class="quantity-input" value="@item.Quantity" min="1">
                                </div>
                                <button type="button" class="remove-btn" data-product-id="@item.Price">Remove</button>
                            </form>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>Your cart is empty.</p>
            }
        </div>

        @if (Model.Any())
        {
            <div class="container cart-summary-container">
                <div class="cart-summary">
                    <h4>Shipping & Tax</h4>
<<<<<<< HEAD
                    <form action="@Url.Action("Payment", "Home")" method="post">
=======
<<<<<<< HEAD
                    <form action="@Url.Action("Payment", "Home")" method="post">
=======
                    <form action="@Url.Action("SubmitOrder", "ShoppingCart")" method="post">
>>>>>>> 269e04670fc86126a2f86c6e82c9c95d19c9c894
>>>>>>> 021045f318c5c29aec4347f6ce09adbc8b00f79b
                        <p>Subtotal: ₹<span id="subtotal">@subtotal.ToString("N2")</span></p>
                        <p>Shipping: ₹@shippingCharge.ToString("N2")</p>
                        <p>GST : ₹<span id="gstAmount">@gstAmount.ToString("N2")</span></p>
                        <p class="total">Total: ₹<span id="total">@total.ToString("N2")</span></p>
                        <button type="submit">Proceed to Checkout</button>
                    </form>
                </div>
            </div>
        }
    </div>

    <script>
        function updateTotals() {
            let subtotal = 0;
            document.querySelectorAll('.item-total').forEach(item => {
                subtotal += parseFloat(item.textContent);
            });

            const gstRate = 0.18;
            const shippingCharge = 50;
            const gstAmount = subtotal * gstRate;
            const total = subtotal + gstAmount + shippingCharge;

            document.getElementById('subtotal').textContent = subtotal.toFixed(2);
            document.getElementById('gstAmount').textContent = gstAmount.toFixed(2);
            document.getElementById('total').textContent = total.toFixed(2);
        }

        document.querySelectorAll('.remove-btn').forEach(button => {
            button.addEventListener('click', function () {
                const productId = this.dataset.productId;
                const cartItem = this.closest('.cart-item');

                fetch('@Url.Action("RemoveFromCart", "ShoppingCart")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    body: `productId=${productId}`
                })
                .then(response => {
                    if (response.ok) {
                        cartItem.remove();
                        updateTotals();
                    } else {
                        console.error('Failed to remove item from cart');
                    }
                })
                .catch(error => console.error('Error:', error));
            });
        });

        document.querySelectorAll('.quantity-input').forEach(input => {
            input.addEventListener('change', function () {
                const quantity = parseInt(this.value);
                const cartItem = this.closest('.cart-item');
                const price = parseFloat(cartItem.dataset.itemPrice);
                const itemTotal = cartItem.querySelector('.item-total');

                itemTotal.textContent = (price * quantity).toFixed(2);
                updateTotals();
            });
        });
    </script>
</body>
</html>
